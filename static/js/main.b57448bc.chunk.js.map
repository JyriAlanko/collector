{"version":3,"sources":["components/Header.js","components/StampContainerImage.js","components/StampContainerData.js","components/StampContainer.js","components/pages/StampList.js","components/pages/About.js","components/pages/Summary.js","Stamp.js","components/pages/EditStampFrom.js","components/pages/AddStampContainer.js","components/MainWindow.js","DataManager.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","StampContainerImage","src","this","props","imageUrl","alt","StampContainerData","stamp","name","yearPublished","isStamped","country","getPriceString","StampContainer","state","showFull","setState","onClick","headerclicked","hidden","StampList","i","list","stampCollection","forEach","element","push","key","About","Summary","Stamp","price","parseFloat","toFixed","EditStampFrom","stampNameChange","event","stampName","target","value","stampYearChange","stampYearPublished","stampStampedChange","stampIsStamped","stampCountryChange","stampCountry","stampPriceChange","stampPrice","stampImageChange","stampImageUrl","submit","addStampToCollection","updateCollection","preventDefault","YearPublished","IsStamped","onSubmit","type","onChange","AddStampContainer","MainWindow","dataManager","to","exact","path","render","bind","DataManager","App","InitDataManager","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b57448bc.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport './StampContainer.css'\r\n\r\nclass Header extends Component {\r\n    render(){\r\n\r\n        return (\r\n            <div className='Header'>\r\n                <h1> Collector </h1>\r\n            </div>\r\n        )\r\n\r\n    }}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\n\r\n\r\nclass StampContainerImage extends Component {\r\n    render(){\r\n\r\n            return (\r\n                <div>\r\n                <img src={this.props.imageUrl} alt=''/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default StampContainerImage","import React, { Component } from 'react'\r\nimport './StampContainerData.css'\r\n\r\nclass StampContainerData extends Component {\r\n    render() {\r\n        const stamp = this.props.stamp;\r\n        const { name, yearPublished, isStamped, country} = stamp;\r\n    \r\n        return (\r\n            <div className='container-fluid'>\r\n                <div className=\"row\">\r\n                    <table className='stampTable'>\r\n                        <tbody>\r\n\r\n                            <tr>\r\n                                <td className='tableHeader'>Name</td>\r\n                                <td className='tableData'>{name}</td>\r\n                            </tr>\r\n\r\n                            \r\n                            <tr>\r\n                                <td className='tableHeader'>Year</td>\r\n                                <td className='tableData'>{yearPublished}</td>\r\n                            </tr>\r\n\r\n\r\n                            <tr>\r\n                                <td className='tableHeader'>Country</td>\r\n                                <td className='tableData'>{country}</td>\r\n                            </tr>\r\n\r\n\r\n                            <tr>\r\n                                <td className='tableHeader'>Price</td>\r\n                                <td className='tableData'>{stamp.getPriceString()+ 'â‚¬'}</td>\r\n                            </tr>\r\n\r\n\r\n                            <tr>\r\n                                <td className='tableHeader'>Is stamped</td>\r\n                                <td className='tableData'>{'' + isStamped}</td>\r\n                            </tr>\r\n\r\n                            \r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StampContainerData","import React, { Component } from 'react'\r\nimport StampContainerImage from './StampContainerImage'\r\nimport StampContainerData from './StampContainerData'\r\nimport './StampContainer.css'\r\n\r\nexport default class StampContainer extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showFull: false,\r\n        };\r\n    }\r\n\r\n\r\n    headerclicked() {\r\n        this.setState({\r\n            showFull: !this.state.showFull\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        const {name, imageUrl} = this.props.stamp;\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n            \r\n                    <div className='stampContainer'>\r\n                        <div className='stampContainerHeader' onClick={() =>\r\n                        this.headerclicked()}>\r\n                            {name}\r\n                        </div>\r\n\r\n                        <div hidden={!this.state.showFull}>\r\n                            <table>\r\n                                <tbody>\r\n\r\n                                    <tr>\r\n\r\n                                        <td>\r\n                                            <StampContainerImage imageUrl={imageUrl}/>\r\n                                        </td>\r\n\r\n\r\n                                        <td>\r\n                                            <StampContainerData stamp={this.props.stamp}/>\r\n                                        </td>\r\n\r\n                                    </tr>\r\n\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport StampContainer from '../StampContainer';\r\n\r\n\r\nexport default class StampList extends Component {\r\n    render() {\r\n\r\n        let i = 0;\r\n        let list = [];\r\n\r\n        this.props.stampCollection.forEach((element) => {\r\n            list.push(<StampContainer stamp={element} key={i}/>);\r\n            i++\r\n        });\r\n    return (\r\n        \r\n             <div>\r\n                {list}\r\n            </div>\r\n        \r\n        \r\n    )}\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport default function About() {\r\n    return (\r\n        \r\n            <div className=\"aboutHeader\">\r\n            \r\n            \r\n            This is stamp collector app v1\r\n\r\n            </div>\r\n        \r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Summary.css';\r\n\r\n\r\nexport default class Summary extends Component {\r\n    render(){\r\n\r\n        let i = 0;\r\n        let list = [];\r\n\r\n        this.props.stampCollection.forEach((element) => {\r\n            list.push(<p key={i}>{element.name}</p>);\r\n            i++\r\n        })\r\n        return (\r\n            \r\n            <div className=\"summaryHeader\">\r\n            \r\n                This is summary of the stamp collector\r\n\r\n                <div className=\"summaryList\">\r\n                    {list}\r\n                </div>\r\n\r\n            </div>\r\n    \r\n        )\r\n    }\r\n}\r\n","class Stamp{\r\n    constructor(name, yearPublished, isStamped, imageUrl, country, price){\r\n\r\n        this.name = name;\r\n        this.yearPublished = yearPublished;\r\n        this.isStamped = isStamped;\r\n        this.imageUrl = imageUrl;\r\n        this.country = country;\r\n        this.price = price;\r\n    }\r\n\r\n    getPriceString() {\r\n        let price = this.price;\r\n        if (typeof price != 'number'){\r\n            price = parseFloat(price);\r\n        }\r\n        return price.toFixed(2);\r\n    }\r\n}\r\n\r\nexport default Stamp;\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport './EditStampFrom.css';\r\n\r\nimport Stamp from '../../Stamp';\r\nimport StampContainerImage from '../StampContainerImage';\r\nimport updateCollection from '../MainWindow'\r\n\r\nclass EditStampFrom extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        const stamp = props.stamp;\r\n\r\n        this.state = {\r\n            stampName: stamp ? stamp.name : '',\r\n            stampYearPublished: stamp ? stamp.YearPublished : '',\r\n            stampIsStamped: stamp ? stamp.IsStamped : false,\r\n            stampCountry: stamp ? stamp.country : '',\r\n            stampPrice: stamp ? stamp.price : '',\r\n            stampImageUrl: stamp ? stamp.imageUrl: ''\r\n        }\r\n    }\r\n\r\n    stampNameChange = (event) => {\r\n        this.setState({\r\n            stampName: event.target.value,\r\n        });\r\n    }\r\n\r\n    stampYearChange = (event) => {\r\n        this.setState({\r\n            stampYearPublished: event.target.value\r\n        });\r\n    }\r\n\r\n    stampStampedChange = (event) => {\r\n        this.setState({\r\n            stampIsStamped: event.target.value = 'true'\r\n        });\r\n    }\r\n\r\n    stampCountryChange = (event) => {\r\n        this.setState({\r\n            stampCountry: event.target.value\r\n        });\r\n    }\r\n\r\n    stampPriceChange = (event) => {\r\n        this.setState({\r\n            stampPrice: event.target.value\r\n        })\r\n    }\r\n\r\n    stampImageChange =(event) => {\r\n        this.setState({\r\n            stampImageUrl: event.target.value\r\n        })\r\n    }\r\n\r\n    /* Add to list/button */\r\n    submit = (event) => {\r\n        let {stampName, stampYearPublished, stampIsStamped, stampCountry,\r\n            stampPrice, stampImageUrl } = this.state;\r\n\r\n        stampPrice = parseFloat(stampPrice) || 0.00;\r\n        stampIsStamped = !!stampIsStamped;\r\n\r\n        const stamp = new Stamp(stampName, stampYearPublished, stampIsStamped, stampCountry,\r\n            stampPrice, stampImageUrl);\r\n\r\n        this.props.addStampToCollection(stamp);\r\n        new updateCollection(stamp);\r\n        event.preventDefault();\r\n    }\r\n    render (){\r\n        const {stampName, stampYearPublished, stampIsStamped, stampCountry, stampPrice, stampImageUrl} = this.state;\r\n\r\n    \r\n        return (\r\n            <div className='editContainer'>\r\n                <form className='formContainer' onSubmit={this.submit}> \r\n\r\n\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                {/* Name */}\r\n                                <td>\r\n                                    <label>Name</label>\r\n                                </td>\r\n\r\n                                <td>\r\n                                    <input type='text' value={stampName} onChange={this.stampNameChange} />\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                {/* Year */}\r\n                                <td>\r\n                                    <label>Published</label>\r\n                                </td>\r\n\r\n                                <td>\r\n                                    <input type='text' value={stampYearPublished} onChange={this.stampYearChange} />\r\n\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                {/* Stamped */}\r\n                                <td>\r\n                                    <label>Is Stamped</label>\r\n                                </td>\r\n\r\n                                <td>\r\n                                    <select value={stampIsStamped} onChange={this.stampStampedChange}>\r\n                                        <option value='true'>true</option>\r\n                                        <option value='false'>false</option>\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                {/* Stamped */}\r\n                                <td>\r\n                                    <label>Country</label>\r\n                                </td>\r\n\r\n                                <td>\r\n                                    <input type='text' value={stampCountry} onChange={this.stampCountryChange} />\r\n                                </td>\r\n                            </tr>\r\n                            \r\n                            <tr>\r\n                                {/* Price */}\r\n                                <td>\r\n                                    <label>Price</label>\r\n                                </td>\r\n\r\n                                <td>\r\n                                    <input type='text' value={stampPrice} onChange={this.stampPriceChange} />\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                {/* Image */}\r\n                                <td>\r\n                                    <label>Image URL</label>\r\n                                </td>\r\n\r\n                                <td> \r\n                                    <input type='text' value={stampImageUrl} onChange={this.stampImageChange} />\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>\r\n\r\n                                <button className=\"editButton\" type='submit'>Submit</button>\r\n                                </td>\r\n                                   \r\n                            </tr>\r\n                            \r\n                        </tbody>\r\n                    </table> \r\n                    <StampContainerImage imageUrl={stampImageUrl} />\r\n                </form>\r\n            </div>\r\n    \r\n        )\r\n    }\r\n}\r\n\r\nexport default EditStampFrom;","import React, { Component } from 'react';\r\nimport EditStampFrom from './EditStampFrom';\r\nimport './AddStampContainer.css'\r\n\r\nclass AddStampContainer extends Component{\r\n    render() {\r\n        return (\r\n            <div className=\"addStampContainer\">\r\n                <EditStampFrom stamp={null}\r\n                    addStampToCollection={this.props.addStampToCollection}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddStampContainer;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link }  from 'react-router-dom';\r\n\r\nimport './MainWindow.css';\r\n\r\nimport StampList from './pages/StampList';\r\nimport About from './pages/About';\r\nimport Summary from './pages/Summary';\r\nimport AddStampContainer from './pages/AddStampContainer';\r\n\r\nclass MainWindow extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            dataManager: props.dataManager,\r\n            stampCollection: props.stampCollection\r\n        }\r\n    }\r\n\r\n    addStampToCollection(){\r\n\r\n    }\r\n\r\n    updateCollection(){\r\n        \r\n        this.setState({\r\n            stampCollection: this.state.dataManager.stampCollection\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const stampCollection = this.state.stampCollection;\r\n\r\n        return (\r\n            <Router>\r\n\r\n                <div className=\"routerLink\">\r\n                    <Link to=\"/stamplist\" >List</Link> | {' '}\r\n                    <Link to=\"/about\" >About</Link> | {' '}\r\n                    <Link to=\"/addstampcontainer\" >Add Stamp</Link> | {' '}\r\n                    <Link to=\"/summary\" >Summary</Link>\r\n                </div>\r\n\r\n\r\n                {/* Show List */}\r\n                <Route exact path='/stamplist' render={props => (\r\n                    <StampList stampCollection={stampCollection}/>\r\n                )} />\r\n\r\n                {/* Show About */}\r\n                <Route path='/about' render={props => (\r\n                    <About stampCollection={stampCollection}/>\r\n                )} />\r\n\r\n                {/* Add stamp */}\r\n                <Route path='/addstampcontainer' render={props => (\r\n                    <AddStampContainer addStampToCollection={this.addStampToCollection.bind(this)}/>\r\n                )} />\r\n\r\n                {/* Show Summary */}\r\n                <Route path='/summary' render={props => (\r\n                    <Summary stampCollection={stampCollection}/>\r\n                )} />\r\n\r\n\r\n            </Router>\r\n            )}\r\n}\r\n\r\nexport default MainWindow;","import Stamp from './Stamp';\r\n\r\n\r\nclass DataManager {\r\n    constructor() {\r\n        this.stampCollection = [];\r\n    }\r\n    \r\n\r\n    InitDataManager(){\r\n        this.stampCollection.push(new Stamp(\r\n            \"Postimerkki\",\r\n            1899,\r\n            true,\r\n            'https://www.finnserver.com/vmstamps/images/large/finland-unused/222-1940_LRG.jpg',\r\n            'Finland',\r\n            2.55\r\n        ));\r\n\r\n        this.stampCollection.push(new Stamp(\r\n            \"Postimerkki 2\",\r\n            1999,\r\n            true,\r\n            'https://upload.wikimedia.org/wikipedia/commons/7/7f/Urho-Kekkonen-1960.jpg',\r\n            'Finland',\r\n            1.25\r\n        ));\r\n\r\n        \r\n    }\r\n}\r\nexport default DataManager;","import React from 'react';\nimport Header from './components/Header';\nimport MainWindow from './components/MainWindow';\nimport DataManager from './DataManager';\n\n\n\n\nimport './App.css';\n\nfunction App() {\n  \n  const dataManager = new DataManager();\n  dataManager.InitDataManager();\n\n  return (\n\n    <div className=\"App\">\n      <div className=\"container\">\n\n          <Header />\n          <MainWindow stampCollection={dataManager.stampCollection} dataManager={dataManager}/>\n\n      </div>\n    </div>\n\n  );\n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}